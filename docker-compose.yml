version: "2.4"

x-env:
  &env
  - DEBUG
  - HOST
  - CORS_ALLOWED_ORIGIN
  - SERVER_SECRET
  - PROXY
  - BOT_TOKEN
  - SENTRY_DSN
  - LOGTAIL_TOKEN
  - DB_NAME
  - DB_USER
  - DB_PASSWORD

services:
  proxy:
    image: caddy:2-alpine
    command: ["caddy", "reverse-proxy", "--from", $HOST, "--to", "web:8099", "--change-host-header"]
    depends_on:
      - web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /mnt/vdb1/volumes/caddy_data:/data
      - /mnt/vdb1/volumes/caddy_config:/config

  web:
    image: cr.yandex/$NAMESPACE/web:$IMAGE_TAG
    environment: *env
    command: ["gunicorn", "--bind", "0.0.0.0:8099", "--workers", "2", "--worker-class", "uvicorn.workers.UvicornWorker", "main:create_app()"]
    depends_on:
      migrate_db:
        condition: service_completed_successfully
    healthcheck:
      test: curl localhost:8099/health || exit 1
      interval: 30s
      timeout: 10s
      retries: 3

  watcher:
    image: cr.yandex/$NAMESPACE/web:$IMAGE_TAG
    environment: *env
    command: ["huey_consumer.py", "watcher.main.huey"]
    depends_on:
      migrate_db:
        condition: service_completed_successfully
    volumes:
      - /mnt/vdb1/volumes/huey:/var/lib/huey/data

  db:
    image: postgres:14.5-alpine
    environment:
      - POSTGRES_DB=$DB_NAME
      - POSTGRES_USER=$DB_USER
      - POSTGRES_PASSWORD=$DB_PASSWORD
    volumes:
      - /mnt/vdb1/volumes/pgdata:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready --username $DB_USER || exit 1
      interval: 3s
      timeout: 3s
      retries: 5

  cache:
    image: redis:7-alpine
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]
    volumes:
      - /mnt/vdb1/volumes/redisdata:/data

  migrate_db:
    image: cr.yandex/$NAMESPACE/web:$IMAGE_TAG
    environment: *env
    command: ["alembic", "-c", "storage/alembic.ini", "upgrade", "head"]
    depends_on:
      db:
        condition: service_healthy
